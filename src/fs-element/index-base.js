/* Automatic generated by './build/bin/build-entry-base.js' */


import Loading from './packages/loading/index.js';
import Steps from './packages/steps/index.js';
import Step from './packages/step/index.js';
import ElCheckbox from './packages/checkbox/index.js';
import Dropdown from './packages/dropdown/index.js';
import DropdownMenu from './packages/dropdown-menu/index.js';
import DropdownItem from './packages/dropdown-item/index.js';
import Form from './packages/form/index.js';
import FormPanel from './packages/form-panel/index.js';
import Tooltip from './packages/tooltip/index.js';
import DatePicker from './packages/date-picker/index.js';
import FormItem from './packages/form-item/index.js';
import Select from './packages/select/index.js';
import Button from './packages/button/index.js';
import Badge from './packages/badge/index.js';
import ButtonGroup from './packages/button-group/index.js';
import Message from './packages/message/index.js';
import Input from './packages/input/index.js';
import Radio from './packages/radio/index.js';
import RadioGroup from './packages/radio-group/index.js';
import Option from './packages/option/index.js';
import OptionGroup from './packages/option-group/index.js';
import Tabs from './packages/tabs/index.js';
import MessageBox from './packages/message-box/index.js';
import Formula from './packages/formula/index.js';
import FormulaParse from './packages/formula-parse/index.js';
import Dialog from './packages/dialog/index.js';
import Popover from './packages/popover/index.js';
import Row from './packages/row/index.js';
import Col from './packages/col/index.js';
import Notification from './packages/notification/index.js';
import Carousel from './packages/carousel/index.js';
import CarouselItem from './packages/carousel-item/index.js';
import TabPane from './packages/tab-pane/index.js';
import locale from 'ifbp-element/src/locale';
import CollapseTransition from 'ifbp-element/src/transitions/collapse-transition';
import dataRender from 'ifbp-element/src/utils/dataRender';
import numberUtil from 'ifbp-element/src/utils/math';
import IfbpTemplate from './packages/ifbp-template';
import IfbpMainArea from './packages/ifbp-main-area';
import IfbpPanel from './packages/ifbp-panel';
import IfbpPanelGroup from './packages/ifbp-panel-group';
import IfbpPage from './packages/ifbp-page';
import IfbpDynamicPanel from './packages/ifbp-dynamic-panel';
import ElTable from './packages/table';
import ElTableColumn from './packages/table-column';


const components = [
    Steps,
    Step,
    Dropdown,
    ElCheckbox,
    DropdownMenu,
    DropdownItem,
    Form,
    FormPanel,
    Tooltip,
    DatePicker,
    FormItem,
    Select,
    Button,
    Badge,
    ButtonGroup,
    Input,
    Radio,
    RadioGroup,
    Option,
    OptionGroup,
    Tabs,
    Formula,
    Dialog,
    Popover,
    Row,
    Col,
    Carousel,
    CarouselItem,
    TabPane,
    CollapseTransition,
    IfbpTemplate,
    IfbpMainArea,
    IfbpPanel,
    IfbpPanelGroup,
    IfbpPage,
    IfbpDynamicPanel,
    ElTable,
    ElTableColumn
];

window.appDefaultConfig = window.appDefaultConfig || {};

const install = function (Vue, opts = {}) {
    /* istanbul ignore if */
    if (install.installed) return;
    locale.use(opts.locale);
    locale.i18n(opts.i18n);
    components.map(component => {
        Vue.component(component.name, component);
    });
    Vue.use(Loading.directive);
    Vue.prototype.$loading = Loading.service;
    Vue.prototype.$msgbox = MessageBox;
    Vue.prototype.$alert = MessageBox.alert;
    Vue.prototype.$confirm = MessageBox.confirm;
    Vue.prototype.$prompt = MessageBox.prompt;
    Vue.prototype.$notify = Notification;
    Vue.prototype.$message = Message;
    Vue.prototype.$Formula = FormulaParse.Formula;
    Vue.prototype.$dateRender = dataRender.dateRender;
    Vue.prototype.$timeRender = dataRender.timeRender;
    Vue.prototype.$dateTimeRender = dataRender.dateTimeRender;
    Vue.prototype.$traceBackRender = dataRender.traceBackRender;
    Vue.prototype.$setformat = numberUtil.setformat;
    Vue.prototype.isDblClick = function () {
        var target = 'tomorrowwillbebetter';
        if (this.currentTarget != null && this.currentTarget === target)
            return true;
        else {
            var oThis = this;
            if (this.cleanCurrTarget)
                clearTimeout(this.cleanCurrTarget);
            this.currentTarget = target;
            this.cleanCurrTarget = setTimeout(function () {
                oThis.currentTarget = null;
            }, 1000);
            return false;
        }
    };
    Vue.prototype.setLsItem = function (key, item) {
        var localStorage = window.localStorage;
        var lsmgr = JSON.parse(localStorage.getItem('lsmgr') || '{}');
        lsmgr.queue = lsmgr.queue || [];
        try {
            localStorage.setItem(key, item);
            var index = lsmgr.queue.indexOf(key);
            if (index > -1) {
                lsmgr.queue.splice(index, 1);
            }
            lsmgr.queue.push(key);
            localStorage.setItem('lsmgr', JSON.stringify(lsmgr));
        } catch (e) { // 缓存满了
            var firstKey = lsmgr.queue.shift();
            localStorage.removeItem(firstKey);
            localStorage.setItem('lsmgr', JSON.stringify(lsmgr));
            this.setLsItem(key, item);
        }
    }
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
}

export default {
    version: '1.1.49',
    locale: locale.use,
    i18n: locale.i18n,
    install,
    CollapseTransition,
    Loading,
    Dropdown,
    DropdownMenu,
    DropdownItem,
    Form,
    FormPanel,
    Tooltip,
    DatePicker,
    FormItem,
    Select,
    Button,
    Badge,
    ButtonGroup,
    Message,
    Input,
    Radio,
    RadioGroup,
    Option,
    OptionGroup,
    Tabs,
    MessageBox,
    Formula,
    FormulaParse,
    Dialog,
    Popover,
    Row,
    Col,
    Notification,
    Carousel,
    CarouselItem,
    TabPane,
    ElCheckbox,
    IfbpMainArea,
    IfbpPanel,
    IfbpPanelGroup,
    IfbpPage
};
